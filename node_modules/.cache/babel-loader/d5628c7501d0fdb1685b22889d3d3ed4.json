{"ast":null,"code":"var _jsxFileName = \"/home/bian/Documents/webdevelopment/Bian/musicLibrary/joybase/src/components/MyMusic.js\";\nimport React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { getStorage, ref, getDownloadURL, getBlob } from 'firebase/storage';\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../FireBase';\n\nfunction MyMusic(props) {\n  var docRef = doc(db, 'Songs', 'test');\n  var docSnap = getDoc(docRef);\n\n  if (docSnap) {\n    getDoc(doc(db, 'Songs', 'test')).then(function (docSnap) {\n      getDownloadURL(docSnap.data().test).then(function (url) {\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'blob';\n\n        xhr.onload = function (event) {\n          var song = xhr.response;\n        };\n\n        xhr.open('GET', url);\n        xhr.send();\n        document.querySelector('.audioplayer').setAttribute('src', url);\n      });\n    });\n  } else {\n    console.log('no such document');\n  } // const storage = getStorage();\n  // getDownloadURL(ref(storage, 'DUCKWORTH.mp3'))\n  // .then((url) => {\n  //   const xhr = new XMLHttpRequest();\n  //   xhr.responseType = 'blob';\n  //   xhr.onload = (event) => {\n  //     const song = xhr.response;\n  //   }\n  //   xhr.open('GET', url);\n  //   xhr.send()\n  // })\n  //   .catch((error) => {\n  //     console.log(error);\n  //   })\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"h3music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, \"My Music\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"hamburger floatingHamburger\",\n    icon: faBars,\n    onClick: props.toggleFun,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MyMusic;","map":{"version":3,"names":["React","useEffect","FontAwesomeIcon","faBars","getStorage","ref","getDownloadURL","getBlob","doc","getDoc","db","MyMusic","props","docRef","docSnap","then","data","test","url","xhr","XMLHttpRequest","responseType","onload","event","song","response","open","send","document","querySelector","setAttribute","console","log","toggleFun"],"sources":["/home/bian/Documents/webdevelopment/Bian/musicLibrary/joybase/src/components/MyMusic.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { getStorage, ref, getDownloadURL, getBlob } from 'firebase/storage'\nimport { doc, getDoc } from \"firebase/firestore\";\nimport { db } from '../FireBase'\n\nfunction MyMusic(props) {\n\n  \n  const docRef = doc(db, 'Songs', 'test')\n  const docSnap = getDoc(docRef)\n\n  if(docSnap) {\n    getDoc(doc(db, 'Songs', 'test')).then(docSnap => {\n        getDownloadURL(docSnap.data().test).then((url) => {\n          const xhr = new XMLHttpRequest();\n          xhr.responseType = 'blob';\n          xhr.onload = (event) => {\n            const song = xhr.response;\n          }\n          xhr.open('GET', url);\n          xhr.send()\n          \n          document.querySelector('.audioplayer').setAttribute('src', url)\n        })\n    })\n  } else {\n    console.log('no such document')\n  }\n\n\n  // const storage = getStorage();\n\n  // getDownloadURL(ref(storage, 'DUCKWORTH.mp3'))\n    // .then((url) => {\n    //   const xhr = new XMLHttpRequest();\n    //   xhr.responseType = 'blob';\n    //   xhr.onload = (event) => {\n    //     const song = xhr.response;\n    //   }\n    //   xhr.open('GET', url);\n    //   xhr.send()\n\n    // })\n  //   .catch((error) => {\n  //     console.log(error);\n  //   })\n  return (\n    <div className='home'>\n      <h3 id=\"h3music\">My Music</h3>\n      <FontAwesomeIcon className='hamburger floatingHamburger' icon={faBars} onClick={props.toggleFun} />\n    </div>\n  )\n}\n\nexport default MyMusic"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,cAA1B,EAA0CC,OAA1C,QAAyD,kBAAzD;AACA,SAASC,GAAT,EAAcC,MAAd,QAA4B,oBAA5B;AACA,SAASC,EAAT,QAAmB,aAAnB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAGtB,IAAMC,MAAM,GAAGL,GAAG,CAACE,EAAD,EAAK,OAAL,EAAc,MAAd,CAAlB;EACA,IAAMI,OAAO,GAAGL,MAAM,CAACI,MAAD,CAAtB;;EAEA,IAAGC,OAAH,EAAY;IACVL,MAAM,CAACD,GAAG,CAACE,EAAD,EAAK,OAAL,EAAc,MAAd,CAAJ,CAAN,CAAiCK,IAAjC,CAAsC,UAAAD,OAAO,EAAI;MAC7CR,cAAc,CAACQ,OAAO,CAACE,IAAR,GAAeC,IAAhB,CAAd,CAAoCF,IAApC,CAAyC,UAACG,GAAD,EAAS;QAChD,IAAMC,GAAG,GAAG,IAAIC,cAAJ,EAAZ;QACAD,GAAG,CAACE,YAAJ,GAAmB,MAAnB;;QACAF,GAAG,CAACG,MAAJ,GAAa,UAACC,KAAD,EAAW;UACtB,IAAMC,IAAI,GAAGL,GAAG,CAACM,QAAjB;QACD,CAFD;;QAGAN,GAAG,CAACO,IAAJ,CAAS,KAAT,EAAgBR,GAAhB;QACAC,GAAG,CAACQ,IAAJ;QAEAC,QAAQ,CAACC,aAAT,CAAuB,cAAvB,EAAuCC,YAAvC,CAAoD,KAApD,EAA2DZ,GAA3D;MACD,CAVD;IAWH,CAZD;EAaD,CAdD,MAcO;IACLa,OAAO,CAACC,GAAR,CAAY,kBAAZ;EACD,CAtBqB,CAyBtB;EAEA;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACF;EACA;EACA;;;EACA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,EAAE,EAAC,SAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cADF,eAEE,oBAAC,eAAD;IAAiB,SAAS,EAAC,6BAA3B;IAAyD,IAAI,EAAE7B,MAA/D;IAAuE,OAAO,EAAES,KAAK,CAACqB,SAAtF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADF;AAMD;;AAED,eAAetB,OAAf"},"metadata":{},"sourceType":"module"}