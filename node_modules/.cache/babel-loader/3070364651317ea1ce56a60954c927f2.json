{"ast":null,"code":"var _jsxFileName = \"/home/bian/Documents/webdevelopment/Bian/musicLibrary/joybase/src/components/MyMusic.js\";\nimport React, { useEffect } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { getStorage, ref, getDownloadURL, getBlob } from 'firebase/storage';\nimport { collection, doc, getDoc, getDocs, query } from \"firebase/firestore\";\nimport { db } from '../FireBase';\n\nfunction MyMusic(props) {\n  useEffect(function () {\n    var q = query(collection(db, 'Songs'));\n    getDocs(q).forEach(function (doc) {\n      console.log(doc);\n    });\n  }); // getDoc(doc(db, 'Songs', 'test')).then(docSnap => {\n  //   if (docSnap.exists()) {\n  //     // getDownloadURL(docSnap.data().test).then((url) => {\n  //     //   const xhr = new XMLHttpRequest();\n  //     //   xhr.responseType = 'blob';\n  //     //   xhr.onload = (event) => {\n  //     //     const song = xhr.response;\n  //     //   }\n  //     //   xhr.open('GET', url);\n  //     //   xhr.send()\n  //     console.log(docSnap.data().test)\n  //     props.setSong(docSnap.data().test)\n  //     // document.querySelector('.audioplayer').setAttribute('src', docSnap.data().test)\n  //     // })\n  //   } else {\n  //     console.log(\"Idiot\")\n  //   }\n  // })\n  // const docRef = doc(db, 'Songs', 'test')\n  // const docSnap = getDoc(docRef)\n  // if(docSnap) {\n  //   console.log(docSnap.data());\n  // } else {\n  //   console.log('no such document')\n  // }\n  // const storage = getStorage();\n  // getDownloadURL(ref(storage, 'DUCKWORTH.mp3'))\n  // .then((url) => {\n  //   const xhr = new XMLHttpRequest();\n  //   xhr.responseType = 'blob';\n  //   xhr.onload = (event) => {\n  //     const song = xhr.response;\n  //   }\n  //   xhr.open('GET', url);\n  //   xhr.send()\n  // })\n  //   .catch((error) => {\n  //     console.log(error);\n  //   })\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    id: \"h3music\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, \"My Music\"), /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    className: \"hamburger floatingHamburger\",\n    icon: faBars,\n    onClick: props.toggleFun,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default MyMusic;","map":{"version":3,"names":["React","useEffect","FontAwesomeIcon","faBars","getStorage","ref","getDownloadURL","getBlob","collection","doc","getDoc","getDocs","query","db","MyMusic","props","q","forEach","console","log","toggleFun"],"sources":["/home/bian/Documents/webdevelopment/Bian/musicLibrary/joybase/src/components/MyMusic.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\nimport { getStorage, ref, getDownloadURL, getBlob } from 'firebase/storage'\nimport { collection, doc, getDoc, getDocs, query } from \"firebase/firestore\";\nimport { db } from '../FireBase'\n\nfunction MyMusic(props) {\n\n  useEffect(() => {\n    const q = query(collection(db, 'Songs'))\n    getDocs(q).forEach((doc) => {\n      console.log(doc)\n    })\n  })\n  // getDoc(doc(db, 'Songs', 'test')).then(docSnap => {\n  //   if (docSnap.exists()) {\n  //     // getDownloadURL(docSnap.data().test).then((url) => {\n  //     //   const xhr = new XMLHttpRequest();\n  //     //   xhr.responseType = 'blob';\n  //     //   xhr.onload = (event) => {\n  //     //     const song = xhr.response;\n  //     //   }\n  //     //   xhr.open('GET', url);\n  //     //   xhr.send()\n  //     console.log(docSnap.data().test)\n  //     props.setSong(docSnap.data().test)\n  //     // document.querySelector('.audioplayer').setAttribute('src', docSnap.data().test)\n  //     // })\n  //   } else {\n  //     console.log(\"Idiot\")\n  //   }\n  // })\n  // const docRef = doc(db, 'Songs', 'test')\n  // const docSnap = getDoc(docRef)\n\n  // if(docSnap) {\n  //   console.log(docSnap.data());\n  // } else {\n  //   console.log('no such document')\n  // }\n\n\n  // const storage = getStorage();\n\n  // getDownloadURL(ref(storage, 'DUCKWORTH.mp3'))\n  // .then((url) => {\n  //   const xhr = new XMLHttpRequest();\n  //   xhr.responseType = 'blob';\n  //   xhr.onload = (event) => {\n  //     const song = xhr.response;\n  //   }\n  //   xhr.open('GET', url);\n  //   xhr.send()\n\n  // })\n  //   .catch((error) => {\n  //     console.log(error);\n  //   })\n  return (\n    <div className='home'>\n      <h3 id=\"h3music\">My Music</h3>\n      <FontAwesomeIcon className='hamburger floatingHamburger' icon={faBars} onClick={props.toggleFun} />\n    </div>\n  )\n}\n\nexport default MyMusic"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,cAA1B,EAA0CC,OAA1C,QAAyD,kBAAzD;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,MAA1B,EAAkCC,OAAlC,EAA2CC,KAA3C,QAAwD,oBAAxD;AACA,SAASC,EAAT,QAAmB,aAAnB;;AAEA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;EAEtBd,SAAS,CAAC,YAAM;IACd,IAAMe,CAAC,GAAGJ,KAAK,CAACJ,UAAU,CAACK,EAAD,EAAK,OAAL,CAAX,CAAf;IACAF,OAAO,CAACK,CAAD,CAAP,CAAWC,OAAX,CAAmB,UAACR,GAAD,EAAS;MAC1BS,OAAO,CAACC,GAAR,CAAYV,GAAZ;IACD,CAFD;EAGD,CALQ,CAAT,CAFsB,CAQtB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAGA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;;EACA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,gBACE;IAAI,EAAE,EAAC,SAAP;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,cADF,eAEE,oBAAC,eAAD;IAAiB,SAAS,EAAC,6BAA3B;IAAyD,IAAI,EAAEN,MAA/D;IAAuE,OAAO,EAAEY,KAAK,CAACK,SAAtF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAFF,CADF;AAMD;;AAED,eAAeN,OAAf"},"metadata":{},"sourceType":"module"}